<?xml version="1.0" encoding="utf-8"?><!--UploadsForm.mxml: This component holds viewing details and creating or updating a record in the Uploads table.This is a sample application.--><mx:VBox	width="100%"	height="100%"	creationComplete="init()"	xmlns:mx="http://www.adobe.com/2006/mxml">	<mx:Script>		<![CDATA[			import mx.controls.Alert;			import mx.validators.Validator;			import mx.events.ValidationResultEvent;			import com.test.app.events.*;			import com.test.app.vo.*;			import com.test.app.model.ModelLocator;			[Bindable] private var model:ModelLocator = ModelLocator.getInstance();			[Bindable] private var validators:Array = new Array();			/* I set up the validation array, adding all validators to the array. */			private function init():void			{				validators = [ idV, nameV, pathV, sizeV, typeV ];			}			/* I check to see if the required fields are present, and if so, I then send the data to the server */			private function validateAndSubmit():void			{				var vals:Array = new Array();					 vals = Validator.validateAll( validators );					if ( vals.length == 0 )					{						saveUploads();					} else {						var alert:Alert = Alert.show( "Please correct invalid form.", "Validation Error" );							alert.isPopUp = false;				}			}			/* I either save or update a Uploads record */			private function saveUploads():void			{				var vo:UploadsVO;				if ( model.selectedUploads == null )				{					vo = new UploadsVO();					
			vo.id = txt_id.text;
			vo.name = txt_name.text;
			vo.path = txt_path.text;
			vo.size = txt_size.text;
			vo.type = txt_type.text;				} else {					vo = new UploadsVO( model.selectedUploads );					
			vo.id = txt_id.text;
			vo.name = txt_name.text;
			vo.path = txt_path.text;
			vo.size = txt_size.text;
			vo.type = txt_type.text;				}				var e_saveUploads:SaveUploadsEvent = new SaveUploadsEvent( vo );					 e_saveUploads.dispatch();			}			/* I clear all of the form input fields, and the error strings, if any */			private function clear():void			{				model.selectedUploads = new UploadsVO();				
			txt_id.text = "";
			txt_id.errorString = "";
			
			txt_name.text = "";
			txt_name.errorString = "";
			
			txt_path.text = "";
			txt_path.errorString = "";
			
			txt_size.text = "";
			txt_size.errorString = "";
			
			txt_type.text = "";
			txt_type.errorString = "";
						}		]]>	</mx:Script>	<mx:Panel width="100%" height="100%" layout="vertical" title="Uploads Details">		<!-- Uploads Form -->		<mx:Form id="form_Uploads" width="100%" height="100%">			
				<mx:FormItem label="Id" required="true" width="100%">
					<mx:TextInput id="txt_id" text="{ model.SELECTED_UPLOADS.id }" width="100%"/>
				</mx:FormItem>
				<mx:FormItem label="Name" required="false" width="100%">
					<mx:TextInput id="txt_name" text="{ model.SELECTED_UPLOADS.name }" width="100%"/>
				</mx:FormItem>
				<mx:FormItem label="Path" required="false" width="100%">
					<mx:TextInput id="txt_path" text="{ model.SELECTED_UPLOADS.path }" width="100%"/>
				</mx:FormItem>
				<mx:FormItem label="Size" required="false" width="100%">
					<mx:TextInput id="txt_size" text="{ model.SELECTED_UPLOADS.size }" width="100%"/>
				</mx:FormItem>
				<mx:FormItem label="Type" required="false" width="100%">
					<mx:TextInput id="txt_type" text="{ model.SELECTED_UPLOADS.type }" width="100%"/>
				</mx:FormItem>		</mx:Form>		<!-- Uploads Action Buttons -->		<mx:ControlBar>						<mx:Button				label="Save"				click="validateAndSubmit()"/>						<mx:Button				label="Clear"				click="clear()"/>		</mx:ControlBar>	</mx:Panel>	<!--All the validators for required inputs-->	
				<mx:StringValidator id="idV" source="{ txt_id }" required="true" property="text"/>
				<mx:StringValidator id="nameV" source="{ txt_name }" required="true" property="text"/>
				<mx:StringValidator id="pathV" source="{ txt_path }" required="true" property="text"/>
				<mx:StringValidator id="sizeV" source="{ txt_size }" required="true" property="text"/>
				<mx:StringValidator id="typeV" source="{ txt_type }" required="true" property="text"/></mx:VBox>       